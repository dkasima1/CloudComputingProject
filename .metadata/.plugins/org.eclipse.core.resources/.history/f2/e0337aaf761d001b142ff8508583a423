package fat_tree_inet.simulations;

import inet.examples.inet.ipv4hook.MyHost;
import inet.examples.inet.ipv4hook.MyRouter;
import inet.mobility.base.MovingMobilityBase;
import inet.node.ethernet.EtherSwitch;
import inet.node.inet.StandardHost;


@license(LGPL);
//
// TODO documentation
//
network Network
{
    parameters:
        @display("bgb=1330,893");
        int num_leafs @prompt("Number of end users") = default(16);
        int num_agg = num_leafs;
        int num_spines = num_agg / 4;
        int num @display("bgb=1326,1100");
    types:
        channel LeafAggChannel extends DatarateChannel {
            datarate = 10gbps;
//            delay = 1us;
        }
        channel AggSpineChannel extends DatarateChannel {
         	datarate = 40gbps;
//         	delay = 5us;   
        }

    submodules:
        spine[num_spines]: EtherSwitch {
            parameters:
                @display("p=100,200,r,50");
            gates:
                ethg[num_aggs/4];
        }

        agg[num_agg]: EtherSwitch {
            parameters:
                @display("p=100,314,r,50");
            gates:
                ethg[num_leafs];
        }
        server[num_leafs]: StandardHost {
        	parameters:
        	    @display("p=100,400,r,50");    
        }
        configurator: Ipv4NetworkConfigurator;
    
    connections allowunconnected:
        for i =0..num_spines-1, for j =0..num_aggs-1 {
        	spine[i].ethg[j] <-->     
        }
}

